exports[`test Render without problem 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    className="bookshelf">
    <h2
        className="bookshelf-title">
        Test Shelf
         (
        0
        )
    </h2>
    <div
        className="bookshelf-books">
        <If
            test={true}>
            <p
                className="list-empty-info">
                No books in this shelf
            </p>
        </If>
        <ol
            className="books-grid">
            
        </ol>
    </div>
</div>,
  "nodes": Array [
    <div
      className="bookshelf">
      <h2
            className="bookshelf-title">
            Test Shelf
             (
            0
            )
      </h2>
      <div
            className="bookshelf-books">
            <If
                  test={true}>
                  <p
                        className="list-empty-info">
                        No books in this shelf
                  </p>
            </If>
            <ol
                  className="books-grid">
                  
            </ol>
      </div>
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <Shelf
        books={Array []}
        changeShelf={[Function]}
        shelfId="wantToRead"
        title="Test Shelf" />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": Shelf {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "books": Array [],
          "changeShelf": [Function],
          "shelfId": "wantToRead",
          "title": "Test Shelf",
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className="bookshelf">
          <h2
                    className="bookshelf-title">
                    Test Shelf
                     (
                    0
                    )
          </h2>
          <div
                    className="bookshelf-books">
                    <If
                              test={true}>
                              <p
                                        className="list-empty-info">
                                        No books in this shelf
                              </p>
                    </If>
                    <ol
                              className="books-grid">
                              
                    </ol>
          </div>
</div>,
        "_debugID": 2,
        "_renderedOutput": <div
          className="bookshelf">
          <h2
                    className="bookshelf-title">
                    Test Shelf
                     (
                    0
                    )
          </h2>
          <div
                    className="bookshelf-books">
                    <If
                              test={true}>
                              <p
                                        className="list-empty-info">
                                        No books in this shelf
                              </p>
                    </If>
                    <ol
                              className="books-grid">
                              
                    </ol>
          </div>
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Shelf
    books={Array []}
    changeShelf={[Function]}
    shelfId="wantToRead"
    title="Test Shelf" />,
}
`;
